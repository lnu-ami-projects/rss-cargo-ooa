name: .NET CI/CD

on:
  push:
    branches: ["main", "master", "develop"]
  pull_request:
    branches: ["main", "master", "develop"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      # Set up PostgreSQL service for integration tests
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: rsscargo_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Navigate to solution directory
        run: cd phase_2/RSSCargo

      - name: Restore dependencies
        run: dotnet restore phase_2/RSSCargo/RSSCargo.sln

      - name: Build
        run: dotnet build phase_2/RSSCargo/RSSCargo.sln --no-restore

      - name: Test
        run: dotnet test phase_2/RSSCargo/RSSCargo.sln --settings phase_2/RSSCargo/test.runsettings --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage
          fail_ci_if_error: false
          verbose: true

      - name: Generate test report
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:./coverage/**/coverage.cobertura.xml -targetdir:./coveragereport -reporttypes:Html

      - name: Upload test report artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-coverage-report
          path: ./coveragereport
          retention-days: 30
